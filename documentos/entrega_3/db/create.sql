-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    usr_id serial NOT NULL,
    usr_name text NOT NULL,
    usr_email text NOT NULL UNIQUE,
    usr_password text NOT NULL,
    usr_country_id bigint NOT NULL DEFAULT 1,
    usr_score bigint NOT NULL DEFAULT 0,
    usr_created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (usr_id)
);

CREATE TABLE IF NOT EXISTS public.teams
(
    tea_id serial NOT NULL,
    tea_name text NOT NULL,
    tea_description text NOT NULL,
    tea_open boolean NOT NULL DEFAULT TRUE,
    tea_score bigint NOT NULL DEFAULT 0,
    tea_created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (tea_id)
);

CREATE TABLE IF NOT EXISTS public.countries
(
    cou_id serial NOT NULL,
    cou_name text NOT NULL,
    cou_flag text NOT NULL,
    PRIMARY KEY (cou_id)
);

CREATE TABLE IF NOT EXISTS public.team_members
(
    tme_id serial NOT NULL,
    tme_tea_id bigint NOT NULL,
    tme_usr_id bigint NOT NULL,
	tme_is_admin boolean NOT NULL DEFAULT false,
    tme_active boolean NOT NULL DEFAULT true,
    tme_created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (tme_id)
);

CREATE TABLE IF NOT EXISTS public.invitations
(
    inv_id serial NOT NULL,
    inv_tea_id bigint NOT NULL,
    inv_code text NOT NULL UNIQUE,
    inv_active boolean NOT NULL DEFAULT TRUE,
    inv_created_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (inv_id)
);

CREATE TABLE IF NOT EXISTS public.circuits
(
    cir_id serial NOT NULL,
    cir_name text NOT NULL,
    cir_coords path NOT NULL,
    PRIMARY KEY (cir_id)
);

CREATE TABLE IF NOT EXISTS public.user_circuits
(
    uci_id serial NOT NULL,
    uci_cir_id bigint NOT NULL,
    uci_usr_id bigint NOT NULL,
    uci_completed boolean NOT NULL DEFAULT false,
    uci_active boolean NOT NULL DEFAULT true,
    uci_date timestamp without time zone NOT NULL,
    PRIMARY KEY (uci_id)
);

CREATE TABLE IF NOT EXISTS public.team_circuits
(
    tci_id serial NOT NULL,
    tci_cir_id bigint NOT NULL,
    tci_tea_id bigint NOT NULL,
    tci_completed boolean NOT NULL DEFAULT false,
    tci_active boolean NOT NULL DEFAULT true,
    tci_date timestamp without time zone NOT NULL,
    PRIMARY KEY (tci_id)
);

ALTER TABLE IF EXISTS public.users
    ADD FOREIGN KEY (usr_country_id)
    REFERENCES public.countries (cou_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.team_members
    ADD FOREIGN KEY (tme_tea_id)
    REFERENCES public.teams (tea_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.team_members
    ADD FOREIGN KEY (tme_usr_id)
    REFERENCES public.users (usr_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.invitations
    ADD FOREIGN KEY (inv_tea_id)
    REFERENCES public.teams (tea_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_circuits
    ADD FOREIGN KEY (uci_cir_id)
    REFERENCES public.circuits (cir_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_circuits
    ADD FOREIGN KEY (uci_usr_id)
    REFERENCES public.users (usr_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.team_circuits
    ADD FOREIGN KEY (tci_cir_id)
    REFERENCES public.circuits (cir_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.team_circuits
    ADD FOREIGN KEY (tci_tea_id)
    REFERENCES public.teams (tea_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


END;

-- Stored Procedures
-- Create Team
CREATE OR REPLACE PROCEDURE create_team(
	team_name TEXT,
	team_description TEXT,
	user_id BIGINT,
	INOUT team_id BIGINT DEFAULT NULL
)
LANGUAGE plpgsql AS
$$
BEGIN	
	IF NOT EXISTS(SELECT tme_id FROM team_members WHERE tme_usr_id = user_id AND tme_active = true) THEN
		INSERT INTO teams (tea_name, tea_description) VALUES (team_name, team_description) RETURNING tea_id INTO team_id;
		INSERT INTO team_members (tme_tea_id, tme_usr_id, tme_is_admin) VALUES (team_id, user_id, true);
	ELSE
		RAISE EXCEPTION 'id %', user_id USING HINT = 'EXCEPTION: User already has a team.';
	END IF;
END
$$;
